echo "this is my config"
adapter driver ftdi
ftdi_device_desc "Olimex OpenOCD JTAG ARM-USB-OCD-H"
ftdi_vid_pid 0x15ba 0x002b

help ftdi_layout_init
# data      - 0000 1001 0000 1000 - GPIO
# direction - 0000 1011 0001 1011
# LED is 0x800
ftdi_layout_init 0x0908 0x0b1b
ftdi_layout_signal nSRST -oe 0x0200
ftdi_layout_signal nTRST -data 0x0100
ftdi_layout_signal LED -data 0x0800

transport select jtag

reset_config trst_and_srst
adapter speed 1000
jtag_ntrst_delay 500
if { [info exists CHIPNAME] } {
  echo $CHIPNAME
  set _CHIPNAME $CHIPNAME
} else {
  set _CHIPNAME pi
}
echo "CHIPNAME: $_CHIPNAME"
set _TAPNAME $_CHIPNAME.tap
set _DAPNAME $_CHIPNAME.dap
set _CTINAME $_CHIPNAME.cti
echo "TAPNAME: $_TAPNAME"
echo "DAPNAME: $_DAPNAME"

# Main DAP
#
if { [info exists DAP_TAPID] } {
   set _DAP_TAPID $DAP_TAPID
} else {
   set _DAP_TAPID 0x4ba00477
}
echo "DAP_TAPID: $_DAP_TAPID"

jtag newtap $_CHIPNAME tap -irlen 4 -ircapture 0x1 -irmask 0xf -expected-id 0x4ba00477 -enable
dap create $_DAPNAME -chain-position $_TAPNAME

set _TARGETNAME $_CHIPNAME

set DBGBASE {0x80010000 0x80012000 0x80014000 0x80016000}
set CTIBASE {0x80018000 0x80019000 0x8001a000 0x8001b000}
set _cores 4
for { set _core 0 } { $_core < $_cores } { incr _core } {
echo $_core
    cti create $_CTINAME.$_core -dap $_DAPNAME -ap-num 0 -ctibase [lindex $CTIBASE $_core]
    target create $_TARGETNAME.$_core aarch64 -dap $_DAPNAME -coreid $_core -dbgbase [lindex $DBGBASE $_core] -cti $_CTINAME.$_core
    $_TARGETNAME.$_core configure -event reset-init { echo hello }
    $_TARGETNAME.$_core configure -event reset-assert-post "aarch64 dbginit"
    $_TARGETNAME.$_core configure -event gdb-attach { halt }
}

# target smp $_TARGETNAME.0 $_TARGETNAME.1 $_TARGETNAME.2 $_TARGETNAME.3
proc runmy { } {
  reset init
  load_image kernel8.img 0x80000
  echo "Image loaded"
}

proc runcircle {} {
  reset init
  load_image /home/zombie/projects/raspberry/circle/addon/SDCard/sample/kernel8.img 0x80000
  echo "Circle image loaded"
}

proc download_image_on_sdcard {} {
  targets pi.0
  halt
  set write_img_params [pi.0 get_write_image_params 0x80010]
  set fn_addr   [lindex $write_img_params 0]
  set img_start [lindex $write_img_params 1]
  set img_end   [lindex $write_img_params 2]
  echo "$fn_addr $img_start $img_end $write_img_params"
  echo [format "fn: 0x08%x, img_start: 0x%08x, img_end: 0x%08x" $fn_addr $img_start $img_end]
  set img_filepath /home/zombie/projects/raspberry/circle/addon/SDCard/sample/kernel8.img
  echo "!!!"
  #load_image /home/zombie/projects/raspberry/circle/addon/SDCard/sample/kernel8.img $img_start
  load_image kernel8.img $img_start
  # load_image $img_filepath $img_start $img_end
  echo "!!!"
}

alias ddd download_image_on_sdcard
alias t targets
